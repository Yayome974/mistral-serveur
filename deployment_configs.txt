# ============================================
# CONFIGURATION VERCEL (vercel.json)
# ============================================
{
  "version": 2,
  "builds": [
    {
      "src": "server.py",
      "use": "@vercel/python",
      "config": {
        "maxLambdaSize": "50mb"
      }
    },
    {
      "src": "static/**",
      "use": "@vercel/static"
    }
  ],
  "routes": [
    {
      "src": "/static/(.*)",
      "dest": "/static/$1"
    },
    {
      "src": "/(.*)",
      "dest": "/server.py"
    }
  ],
  "env": {
    "TESSDATA_PREFIX": "/usr/share/tesseract-ocr/5/tessdata/"
  },
  "functions": {
    "server.py": {
      "maxDuration": 60
    }
  }
}

# ============================================
# CONFIGURATION RAILWAY (railway.toml)
# ============================================
[build]
builder = "NIXPACKS"

[deploy]
startCommand = "python server.py"
healthcheckPath = "/health"
healthcheckTimeout = 30
restartPolicyType = "ON_FAILURE"

[[build.env]]
name = "NIXPACKS_PYTHON_VERSION"
value = "3.11"

[[build.env]]  
name = "RAILWAY_RUN_UID"
value = "1001"

[variables]
PORT = "5000"
PYTHONUNBUFFERED = "1"
TESSDATA_PREFIX = "/nix/store/*/share/tessdata"

# ============================================
# DOCKERFILE (pour Railway/autres)
# ============================================
FROM python:3.11-slim

# Installation des dépendances système pour OCR
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-fra \
    tesseract-ocr-eng \
    libopencv-dev \
    python3-opencv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copie des fichiers requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copie du code source
COPY . .

EXPOSE 5000

CMD ["python", "server.py"]

# ============================================
# REQUIREMENTS.TXT
# ============================================
Flask==2.3.3
Pillow==10.0.1
pytesseract==0.3.10
opencv-python==4.8.1.78
numpy==1.24.3
requests==2.31.0
python-dotenv==1.0.0
Werkzeug==2.3.7

# ============================================
# .ENV (exemple - à personnaliser)
# ============================================
# API Keys (optionnelles mais recommandées)
MISTRAL_API_KEY=your_mistral_api_key_here
HUGGINGFACE_API_KEY=your_huggingface_token_here

# Configuration Ollama (pour IA locale)
OLLAMA_URL=http://localhost:11434

# Configuration environnement
FLASK_ENV=production
PORT=5000

# ============================================
# PROCFILE (pour Heroku si utilisé)
# ============================================
web: python server.py

# ============================================
# NIXPACKS.TOML (pour Railway)
# ============================================
[phases.setup]
nixPkgs = ["python311", "tesseract", "opencv"]

[phases.install]
cmds = ["pip install -r requirements.txt"]

[start]
cmd = "python server.py"